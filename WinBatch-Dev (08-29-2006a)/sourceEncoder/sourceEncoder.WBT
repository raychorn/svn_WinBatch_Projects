;************************************************************************
; sourceEncoder.wbt
; 
;************************************************************************

_wname = "Source Encoder v1.1"
wname = "%_wname% (c)1978-2005 Hierarchical Applications Limited, All Rights Reserved."

AddExtender("WWINT44I.DLL")

IntControl (81, GetTickCount(), 0, 0, 0)

#DefineFunction GetWMIInfo()
	IntControl(73, 2,0,0,0)
	Locator = ObjectOpen("WbemScripting.SWbemLocator")
	Service = Locator.ConnectServer()
	Security = Service.Security_     
	Security.ImpersonationLevel = 3
	Class = "Win32_ComputerSystemProduct"
	Instance = Service.InstancesOf(Class)
	Enum = ObjectCollectionOpen(Instance)
	While 1
		Obj = ObjectCollectionNext(Enum)
		If Obj == 0 Then Break
		man=Obj.Vendor
		model=Obj.Name
		serial=Obj.IdentifyingNumber
	EndWhile
	
	ObjectCollectionClose(Enum)
	ObjectClose(Instance)
	ObjectClose(Security)
	ObjectClose(Service)
	ObjectClose(Locator)
	data=StrCat(man,@TAB,model,@TAB,serial)
	Return(data)
	
	:WBERRORHANDLER
	Error=LastError()
	Terminate(error!=3246,"Error %error%",StrCat(wberrorhandlerline,@CRLF,IntControl(34,error,0,0,0)))
	%wberrorhandlerassignment%="Not Found"
	IntControl(73, 2,0,0,0)
	Return
#EndFunction

_wname_ = StrReplace( StrReplace( _wname, ".", "_"), " ", "_")

_hostName = "babylon5.halsmalltalker.com"
_urlRegister = "/rayhorn/cfm/utils/register-product.cfm"
_urlHostRegister = "http://%_hostName%%_urlRegister%"

_urlPurchase = "http://%_hostName%/rayhorn/cfm/utils/purchase-product.cfm"

_myPath = FilePath( IntControl( 1004, 0, 0, 0, 0))

_iniPath = '%_myPath%%_wname_%.INI'

_procCnt = 0

const_licenseKey_symbol = "licenseKey"
const_no_symbol = "NO"
const_ie_symbol = "iexplore.exe"

if FileExist(_iniPath) == @False
	IniWritePvt("Main", "srcEncPath", "", _iniPath)
	IniWritePvt("Main", const_licenseKey_symbol, "", _iniPath)
	IniWritePvt("Main", "lastJavaScriptPath", "Z:\wwwroot", _iniPath)
endif
srcEncPath = IniReadPvt ("Main", "srcEncPath", "", _iniPath)
licenseKey = IniReadPvt ("Main", const_licenseKey_symbol, "", _iniPath)
lastJavaScriptPath = IniReadPvt ("Main", "lastJavaScriptPath", "Z:\wwwroot", _iniPath)

;;;;;;;;;;;;;;;; Generic Initialization ;;;;;;;;;;;;;;;;;;;;
IntControl(1008,1,0,0,0)
IntControl(12,5,0,0,0)
;;;;;;;; Assorted Colors ;;;;;;;;;
DKBLUE="0,0,128"
BLUE="0,0,255"
LTGRAY="192,192,192"
GRAY="128,128,128"
DKGRAY="64,64,64"
GREEN="0,255,0"
RED="255,0,0"
BLACK="0,0,0"
WHITE="255,255,255"
YELLOW="255,255,0"

if (StrLen(srcEncPath) == 0) || (FileExist(srcEncPath) == @FALSE)
	srcEnvInstaller = "%_myPath%sce10en.exe"
	RunWait( srcEnvInstaller, "")

	srcEncPath = "D:\Program Files\Windows Script Encoder\screnc.exe"
	
	if FileExist(srcEncPath) == @FALSE
		types = "SecEnc|srcenc.exe|"
		fn1 = AskFileName("SelectFile", "C:\", types, "*.exe", 1)
		if StrLen(fn1) > 0
			srcEncPath = fn1
			IniWritePvt("Main", "srcEncPath", srcEncPath, _iniPath)
		endif
	else
		IniWritePvt("Main", "srcEncPath", srcEncPath, _iniPath)
	endif
endif

types = "JavaScript Files|*.js|"
fn1 = AskFileName("Select any JavaScript File to begin the process...", lastJavaScriptPath, types, "*.js", 1)
if StrLen(fn1) > 0
	fp1 = FilePath(fn1)
	IniWritePvt("Main", "lastJavaScriptPath", fp1, _iniPath)
	fp = "%fp1%*.js"
	lst = FileItemize(fp)
	Gosub filterOutEncoded
	Gosub encodeTheList
;	Message("File selected was (%fp1%)", fn1)
endif

exit


:filterOutEncoded
	_lst = ""
	n = ItemCount(lst, @TAB)
	for i = 1 to n
		s = ItemExtract(i, lst, @TAB)
		if StrIndexNc(s, "_.js", 1, @FWDSCAN) == 0
			_lst = ItemInsert(s, ItemCount(_lst, @TAB), _lst, @TAB)
		endif
	next
	lst = _lst
;	A = AskItemList("Files", lst, @tab, @sorted, @single, @false)
return



:encodeTheList2
	n = ItemCount(lst, @TAB)
	for i = 1 to n
		Gosub encodeAnItem
	next
return


:encodeAnItem
	s = ItemExtract(i, lst, @TAB)
	ft = FileExtension(s)
	ss = StrReplace(s, ".%ft%", "_.%ft%")
	sTime = ""
	sName = "%fp1%%s%"
	if FileExist(sName) <> @FALSE
		sTime = FileTimeGetEx(sName,2)
	endif
	ssTime = ""
	ssName = "%fp1%%ss%"
	if FileExist(ssName) <> @FALSE
		ssTime = FileTimeGetEx(ssName,2)
	endif
	tdSecs = -1
	bool_srcEnc = @FALSE
	if (StrLen(sTime) > 0) && (StrLen(ssTime) > 0)
		tdSecs = TimeDiffSecs(sTime, ssTime)
		if tdSecs > 0
			bool_srcEnc = @TRUE
		endif
	else
		bool_srcEnc = @TRUE
	endif
	if bool_srcEnc == @TRUE
		if StrLen(ssTime) > 0 then FileDelete( ssName)
		srcEncCmd = '/s "%sName%" "%ssName%"'
		RunHideWait( srcEncPath, srcEncCmd)
		;Message("DEBUG", StrCat("bool_srcEnc = [%bool_srcEnc%], sName = [%sName%] [%sTime%], ssName = [%ssName%] [%ssTime%], tdSecs = [%tdSecs%], srcEncCmd = [", srcEncCmd, "]"))
	endif
return


:encodeTheList
	bExit=1   
	bRegister=2

	BoxesUp("100,100,900,900",@NORMAL)

	rectutext="100,100,1000,900"
	rectTherm="200,350,800,650"
	rectButton="0,0,100,100"
	rectThermLine1="100,550,900,550"
	rectThermLine2="900,550,900,800"
	rectThermLine3="900,800,100,800"
	rectThermLine4="100,800,100,550"
	ThermPenWidth=20
	rectThermText1="100,50,1000,199"
	rectThermPercent="490,625,550,725"
	rectTopHalf="0,0,1000,210"
	rectBotHalf="0,210,1000,1000" 
	rectTitle="100,20,900,170"
	rectTitleText="10,10,790,140"
	TitleHeight=950
	rectNote="100,30,900,270"
	NoteHeight=400
	rectNoteText="70,200,950,800"
     
	rectnoteline1="0,0,1000,0"
	rectNoteline2="1000,1000,1000,0"
	rectNoteLine3="0,1000,1000,1000"
	rectNoteLine4="0,0,0,1000"
	notepenwidth=20
	rectnoteline1b="40,150,960,150"
	rectNoteline2b="960,840,960,150"
	rectNoteLine3b="40,840,960,840"
	rectNoteLine4b="40,150,40,840"
	notepenwidthb=10
	Thermid=3
	Noteid=4
	; Make main window look nice
	BoxColor(1,"128,0,0",1)
	BoxDrawRect(1,"0,0,1000,1000",2)
	BoxCaption(1,"Encoding the List of JavaScript Files")
             
	;;;;Do note box
	BoxNew(Noteid,rectNote,1)
	BoxColor(Noteid,LTGRAY,0)       ; Light Gray no gradient
	BoxDrawRect(Noteid,"",2)
	
	BoxTextFont(Noteid,"Arial",NoteHeight,170,0)
	BoxTextColor(Noteid,RED)
	
	BoxPen(Noteid,WHITE,notepenwidth)
	boxdrawline(Noteid,rectNoteLine1)
	boxdrawline(Noteid,rectNoteLine4)
	BoxPen(Noteid,GRAY,notepenwidth)
	boxdrawline(Noteid,rectNoteLine2)
	boxdrawline(Noteid,rectNoteLine3)
	BoxPen(Noteid,WHITE,notepenwidthb)
	boxdrawline(Noteid,rectNoteLine2b)
	boxdrawline(Noteid,rectNoteLine3b)
	BoxPen(Noteid,GRAY,notepenwidthb)
	boxdrawline(Noteid,rectNoteLine1b)
	boxdrawline(Noteid,rectNoteLine4b)
	
	BoxDataTag(Noteid,"NOTE")
	BoxDrawText(Noteid,rectNoteText,"Initializing...",1,4)
             
	;Draw thermoneter outline
	BoxNew(Thermid,rectTherm,2)
	BoxUpdates(Thermid,0)
	BoxCaption(Thermid,"Name Goes Here")
	BoxColor(Thermid,LTGRAY,0)
	BoxDrawRect(Thermid,"",2)
	; Draw updating thermometer here
	; there are 3 virtual pixels per percent
	; we have to draw 3 boxes and some text...
	BoxDataTag(Thermid,"FRED")
	BoxCaption(Thermid,"Please wait. Processing Files...")
	
	n = ItemCount(lst, @TAB)

	if (StrLen(licenseKey) == 0) && (n > 1)
		n = 1
		Message("Shareware Notice", "You are using a shareware version of this program that can encode only one JavaScript script at a time. Please purchase a License to unlock the full version that can encode as many scripts as you wish.")
	endif
             
	for i = 1 to n
		BoxDataClear(Thermid,"FRED")
		BoxUpdates(Thermid,0)
		BoxColor(Thermid,GREEN,0)
		xxx= 100+((800*i)/n)
		per=(100.0*i)/n
		per=Int(per)
		BoxDrawRect(Thermid,"104,554,%xxx%,796",2)
		BoxColor(Thermid,GRAY,0)
		BoxDrawRect(Thermid,"%xxx%,554,896,796",2)
		BoxPen(Thermid,BLACK,ThermPenWidth)
		boxdrawline(Thermid,rectThermLine1)
		boxdrawline(Thermid,rectThermLine2)
		boxdrawline(Thermid,rectThermLine3)
		boxdrawline(Thermid,rectThermLine4)

		s = ""
		Gosub encodeAnItem

		verb_encoded = ""
		if bool_srcEnc == @TRUE
			verb_encoded = "*ENCODED*"
		endif

		if per<50 then BoxTextColor(Thermid,WHITE)
		BoxDrawText(Thermid,rectThermPercent,"%per%%%",0,0)
		BoxTextColor(Thermid,BLACK)
		BoxColor(Thermid,LTGRAY,0)
		BoxDrawText(Thermid,rectThermText1,"Steps completed: %i% of %n% (%s%) %verb_encoded%",1,0)
		BoxDataClear(NoteId,"NOTE");;;
		BoxDrawText(Noteid,rectNoteText,"Encoding JS Files",1,4);;;
		BoxUpdates(Thermid,2)

	;	TimeDelay(Random(2.0))   ;Fake passage of time
	next
	BoxTextColor(Noteid,GREEN)        
	BoxDrawText(Noteid,rectNoteText,"Done !",1,4)

	if (StrLen(licenseKey) == 0)
		while 1
			BoxButtonDraw(1,bRegister,"&Register",  "550,860,700,930")
			BoxButtonDraw(1,bExit,    "E&xit",  "750,860,900,930")
	
			iBox = 0
			BoxButtonWait()
			while iBox == 0
				for x = 1 to 2
					if BoxButtonStat(1,x) then iBox = x
				next
			end while

			if iBox
				switch iBox
					case bExit
						exit
						break
					case bRegister
						gosub DoRegister
						break
				end switch
			endif
		end while
	endif

	if (StrLen(licenseKey) > 0)
		BoxDestroy(Thermid)
		BoxDestroy(Noteid)
	endif
Return


:DoRegister
	_machineId = ""
	datax = GetWmiInfo()
	nData = ItemCount(datax, @TAB)
	for iData = 1 to nData
		s%iData% = ItemExtract(iData, datax, @TAB)
		_machineId = StrCat(_machineId, s%iData%, "|")
	next
	_urlEnc_machineId = iUrlEncode(_machineId)
	_rndNum = Random(65535)
	_url_ = StrCat(_urlRegister, "")

	_url_parms = ""    ;initalized url data
	_url_parms = iContentUrl(_url_parms,"nocache",_rndNum)
	_url_parms = iContentUrl(_url_parms,"prodId",_wname_)
	_url_parms = iContentUrl(_url_parms,"machineId",_machineId)

	Gosub processHTTPRequest
;	AskItemlist("",datax,@TAB,@UNSORTED,@SINGLE)
	Message("Register Notice", "Perform Registration. [%_url_%]")
Return


:processHTTPRequest
	_procCnt = _procCnt + 1
	tophandle%_procCnt% = iBegin(0,"","")
	connecthandle%_procCnt% = iHostConnect(tophandle%_procCnt%, _hostName, @HTTP, "", "")
	
	datahandle%_procCnt% = iHttpInit(connecthandle%_procCnt%, "POST", _url_, "", 7)
	
	if datahandle%_procCnt% == 0
		err%_procCnt% = iGetLastError()
		Message("Last Error",err%_procCnt%)
		iClose(tophandle%_procCnt%)
		exit
	endif
	rslt%_procCnt% = iHttpOpen(datahandle%_procCnt%, "", _url_parms, -1)
	if rslt%_procCnt% == "ERROR" || rslt%_procCnt% != 200 
		if rslt%_procCnt% == "ERROR" 
			errstr%_procCnt% = "WinInet Error"
			rslt%_procCnt% = iGetLastError()
		else
			errstr%_procCnt% = "HTTP Error"
		endif
		
		Message(errstr%_procCnt%, rslt%_procCnt%)
		iClose(tophandle%_procCnt%)
		exit
	endif 
	
	xx_fname%_procCnt% = StrCat(_myPath, "%_wname_%%_procCnt%.html")
	if FileExist(xx_fname%_procCnt%) <> @FALSE then FileDelete(xx_fname%_procCnt%)
	xx%_procCnt% = iReadData(datahandle%_procCnt%, xx_fname%_procCnt%)

	if xx%_procCnt% == @True
		fHand%_procCnt% = FileOpen(xx_fname%_procCnt%, "READ")
		while @TRUE             ; Loop till break do us end
			x%_procCnt% = FileRead(fHand%_procCnt%)
			If x%_procCnt% == "*EOF*" Then Break
			yLen%_procCnt% = StrLen(x%_procCnt%)
			y1%_procCnt% = ItemCount(x%_procCnt%, "&")
			y2%_procCnt% = ItemCount(x%_procCnt%, "=")
			if (y1%_procCnt% > 1) && (y2%_procCnt% > 1)
				y3%_procCnt% = ItemExtract( 2, x%_procCnt%, "&")
				y4%_procCnt% = StrTrim(ItemExtract( 1, y3%_procCnt%, "="))
				y5%_procCnt% = StrTrim(ItemExtract( 2, y3%_procCnt%, "="))
				if (StrLen(y4%_procCnt%) > 0) && (StrLen(y5%_procCnt%) > 0)
					if (StriCmp(const_licenseKey_symbol, y4%_procCnt%) == 0) && (StriCmp(const_no_symbol, y5%_procCnt%) <> 0)
						IniWritePvt("Main", "y4%_procCnt%", y5%_procCnt%, _iniPath)
					else
						Run(const_ie_symbol, StrCat(_urlPurchase, "?", _url_parms))
					endif
					break
				endif
			endif
		endwhile
		FileClose(fHand%_procCnt%)
		if FileExist(xx_fname%_procCnt%) <> @FALSE then FileDelete(xx_fname%_procCnt%)
	endif

	iClose(datahandle%_procCnt%)
	iClose(connecthandle%_procCnt%)
	iClose(tophandle%_procCnt%)
return

