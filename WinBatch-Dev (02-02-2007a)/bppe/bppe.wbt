; bppe.wbt

AddExtender("WWWSK32I.DLL")

IntControl(41, 1, 0, 0, 0) ; Y2K to 4 digit YYYY

_appName = "bppe"

wname_password = "Enter Network Password"

wname_password_netscape = "Username and Password Required"

wname_smalltalker = "HAL Smalltalker"

wname_save_as = "Save As..."
wname_save_html_document = "Save HTML Document"

;_URL = "http://sisko.cybercash-net.com/billing-schedule/scan-for-missing-cc.iHTML"

_URL = "http://sisko.cybercash-net.com/billing/system/scan-for-missing-cc.iHTML"
fname = "c:\temp\scan-for-missing-cc.txt"
_userid = "smalltalker"
_passwd = "peek@boo"

_debug_mode_no = "no"
_debug_mode_yes = "yes"

_interactive_mode_no = "no"
_interactive_mode_yes = "yes"

internet_explorer = "iexplore.exe"

netscape_browser = "netscape.exe"

_debug_mode = _debug_mode_no

If param0 > 0
	_URL = param1
Else
	_URL = AskLine("%_appName%", "URL to process?", _URL)
Endif

If param0 > 1
	fname = param2
Else
	fname = AskLine("%_appName%", "Temp filename?", fname)
Endif

If param0 > 2
	_userid = param3
Else
	_userid = AskLine("%_appName%", "userid?", _userid)
Endif

If param0 > 3
	_passwd = param4
Else
	_passwd = AskLine("%_appName%", "passwd?", _passwd)
Endif

If param0 > 4
	_debug_mode = param5
Else
	_debug_mode = AskLine("%_appName%", "Debug Mode? ('%_debug_mode_yes%' or '%_debug_mode_no%')", _debug_mode)
Endif

If param0 > 5
	_interactive_mode = param6
Else
	_interactive_mode = AskLine("%_appName%", "Interactive Mode? ('%_interactive_mode_yes%' or '%_interactive_mode_no%')", _interactive_mode)
Endif

_max_secs = 60 * 5

If param0 > 6
	max_secs = param7
Else
	max_secs = AskLine("%_appName%", "Max Secs? ", _max_secs)
Endif

_web_browser = "N" ; default browser is Netscape

If param0 > 7
	web_browser = param8
Else
	web_browser = AskLine("%_appName%", "Web Browser? (I=Internet Explorer or N=Netscape) ", _web_browser)
	
	If (web_browser <> "I") && (web_browser <> "N")
		web_browser = "N"
	Endif
Endif

urls_domain_name = httpGetServer( _URL, "")
path = httpGetpath( _URL, "")

_base_html_file_root = ""

_cycle_html_files = @FALSE
If FileExtension( fname) == ""
	_cycle_html_files = @TRUE
	_base_html_file_root = FileRoot( fname)
Endif

_base_html_file_drive = ""
_base_html_file_path = ""

_base_html_file_dir = FilePath( fname)
If ItemCount( fname, ":") > 1
	_base_html_file_drive = ItemExtract( 1, fname, ":")
	_base_html_file_path = ItemExtract( 2, fname, ":")
Endif

If DirExist( _base_html_file_dir) == @FALSE
	_dir_builder = StrCat( _base_html_file_drive, ":\")
	_tok_count = ItemCount( _base_html_file_path, "\")
	For i = 1 to (_tok_count - 1)
		_token = ItemExtract( i, _base_html_file_path, "\")
;Message( "DEBUG-1", "#%i%, __dir_builder=(%_dir_builder%), _base_html_file_path=(%_base_html_file_path%), _token=(%_token%)")
		If StrLen( _token) > 0
			_dir_builder = StrCat( _dir_builder, _token, "\")
;Message( "DEBUG-2", "__dir_builder=%_dir_builder%")
			DirMake( _dir_builder)
		Endif
	Next

	If DirExist( _base_html_file_dir) == @FALSE
		Message( "%_appName%", "ERROR: The directory %_base_html_file_dir% doesn't exist!  Please create it and try again.")
	Endif

;	 Message( "DEBUG", "_base_html_file_dir=%_base_html_file_dir%")
;	 exit
Endif

If _cycle_html_files == @TRUE
	Gosub cycleResultFile
Endif

;Message( "DEBUG", "_resultsFile=%_resultsFile%")
;exit

If _interactive_mode == _interactive_mode_yes

	If web_browser == "I"
		Run( internet_explorer, _URL)
	Else
		If web_browser == "N"
			Run( netscape_browser, _URL)
		Endif
	Endif
	
	_begin_time = TimeYmdHms()
	while StrIndex( WinGetActive(), wname_smalltalker, 1, @FWDSCAN) == 0
		_now_time = TimeYmdHms()
		If TimeDiffSecs( _now_time, _begin_time) > max_secs
			break
		Endif

		If web_browser == "I"
			If WinExist( wname_password) == @TRUE
				SendKeysTo( wname_password, _userid)
				SendKeysTo( wname_password, '{TAB}')
				SendKeysTo( wname_password, _passwd)
				SendKeysTo( wname_password, '{ENTER}')
			Endif
		Else
			If web_browser == "N"
				If WinExist( wname_password_netscape) == @TRUE
					SendKeysTo( wname_password_netscape, _userid)
					SendKeysTo( wname_password_netscape, '{TAB}')
					SendKeysTo( wname_password_netscape, _passwd)
					SendKeysTo( wname_password_netscape, '{ENTER}')
				Endif
			Endif
		Endif

		Delay( 10)
	endwhile

	SendKey( '!F')
	Delay( 1)

	If web_browser == "I"
		SendKey( 'A')
	Else
		If web_browser == "N"
			SendKey( 'S')
		Endif
	Endif

	Delay( 1)
	SendKey( _resultsFile)
	Delay( 1)
	SendKey( '!S')

	If web_browser == "I"
		_wname_save_as = wname_save_html_document
	Else
		If web_browser == "N"
			_wname_save_as = wname_save_as
		Endif
	Endif

	_max_secs_wait_for_save = 60 * 5

	_begin_time = TimeYmdHms()
	while StrIndex( WinGetActive(), _wname_save_as, 1, @FWDSCAN) <> 0
		_now_time = TimeYmdHms()
		If TimeDiffSecs( _now_time, _begin_time) > _max_secs_wait_for_save
			break
		Endif

		Delay( 10)
	endwhile

	If web_browser == "I"
		SendKey( '!F')
		Delay( 1)
		SendKey( 'C')
	Else
		If web_browser == "N"
			Delay( 1)
			_wname_to_close = WinGetActive()
;			 Message( "%_appName%", StrCat( "About to close: ", WinGetActive()))
			If WinExist( _wname_to_close) == @TRUE
				WinClose( _wname_to_close)
			Endif
			Delay( 5)
			If WinExist( _wname_to_close) == @TRUE
				SendMenusTo( _wname_to_close, "File Exit")
			Endif
			Delay( 5)
			If WinExist( _wname_to_close) == @TRUE
				SendKey( '^Q')
			Endif
			Delay( 5)
			If WinExist( _wname_to_close) == @TRUE
				SendKey( '!F')
				Delay( 1)
				SendKey( 'x')
			Endif
		Endif
	Endif
		
Else
	httpAuth( _userid, _passwd)

	ErrorMode(@OFF)
;_response_code = httpRecvFile( urls_domain_name, path, _resultsFile, 0)

	_response_code = httpRecvQryF( urls_domain_name, path, "", _resultsFile, @hMethodGet) 

	ErrorMode(@CANCEL)

	Gosub GetResponseCodeText

	handle = fileopen( _results_txt_File, "write")
	filewrite(handle, "_response_code=%_response_code%")
	filewrite(handle, _response_text)
	fileclose(handle)

	If StrCmp( _debug_mode, _debug_mode_no) <> 0
		txt = "httpRecvFile Return code is %_response_code% in %_resultsFile%"
		Message( "DEBUG", txt)
	Endif
Endif

exit


:cycleResultFile
; fname ....... input - the name of the results file

; cycle the current results file - look for an open slot and use it
i = 1
_found = @TRUE
_today = StrReplace( TimeYmdHms( ), ":", "_")
_resultsFile = "%fname%-%_today%.html"
_results_txt_File = "%fname%-%_today%.txt"
while _found == @TRUE
	_fex = FileExist( _resultsFile)
	If _fex == @FALSE ; the candidate file does not exist so use it!
		_found = _fex
		break
	Else
		i = i + 1
		_resultsFile = "%fname%-%_today%-%i%.html"
		_results_txt_File = "%fname%-%_today%-%i%.txt"
	Endif
endwhile

return


:GetResponseCodeText
; _response_code ..... input - the response code
; _response_text ..... output - the response text for the _response_code

_response_text = "UNKNOWN"

Switch _response_code
	case 200
		_response_text = "OK"
		break
	case 201
		_response_text = "Created - Following a POST command, this indicates success, but the text of the response line indicates the URL of the new document."
		break
	case 202
		_response_text = "Accepted - Request accepted for asynchronous processing."
		break
	case 203
		_response_text = "Partial Information - Returned information may be cached or private."
		break
	case 204
		_response_text = "No Response - Used for scripts that don't return a visible result."
		break
	case 301
		_response_text = "Moved - Browsers with link editing capabilities should automatically link to the new reference."
		break
	case 302
		_response_text = "Found - Same as move, except that linking to the found address doesn't make much sense, since the document URL is expected to change. This is a Location: header."
		break
	case 303
		_response_text = "Method - Same as found, but a different method may be used to access the document; details about the method are sent in the message body."
		break
	case 304
		_response_text = "Not modified - Use the local copy if it was cached."
		break
	case 400
		_response_text = "Bad Request - Impossible request or syntax error"
		break
	case 401
		_response_text = "Unauthorized - Request should be retried with proper authorization header."
		break
	case 402
		_response_text = "Payment Required - Request should be retried with proper charge-to header."
		break
	case 403
		_response_text = "Forbidden - Authorization will not help"
		break
	case 404
		_response_text = "Not found - A document with that URL doesn't exist."
		break
	case 411
		_response_text = "No such group - (NCSA httpd) the newsgroup in news:newsgroup doesn't exist."
		break
	case 500
		_response_text = "Internal Error"
		break
	case 501
		_response_text = "Not implemented - ``I'm sorry, Dave, I can't do that.''"
		break
	case 502 
		_response_text = "Timed out  - (Seen in practice, not in the specification.)"
		break
	case response	 ; default case
		_response_text = "UNKNOWN"
		break
EndSwitch

_response_text = StrCat( _response_text, " - _response_code %_response_code%")

return


