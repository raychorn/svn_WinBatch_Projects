:doExecSQLDirect2
;CONNECTS TO THE _datasource DATA SOURCE
; _datasource ....... input - the datasource
; hdbc .............. input - already opened
; sql_stmnt ......... input - holds the SQL statement - sql_stmnt%sql_level%
; sql_fetch ......... input - holds the fetchable flag @TRUE or @FALSE
; sql_fetch_map ..... input - holds the map of fields to fetch S=String N=number (one per field) in the form of "Snnn,N" where nnn is the field size
; sql_fetch_gosub ... input - the name of the subroutine called via Gosub
; sql_level ......... input - the sql level 2-10 (optional)
; sql_alias ......... input - the prefix for all _cvalue variables normall is the _table %sql_alias%n where n is 1..N one N for each column
;                             _sql_alias_var_name = sql_alias%sql_level%
; retcode ........... output - used
; hstmt ............. output - used
; sql_fetched ....... output - holds the fetched flag @TRUE or @FALSE
If IsDefined( _datasource) == @NO
    WebOut('<BR><B><FONT COLOR="RED">ERROR: doExecSQLDirect missing variable named _datasource</FONT></B><BR>', _html_crlf)
    Exit
Endif

If IsDefined( hdbc) == @NO
    WebOut('<BR><B><FONT COLOR="RED">ERROR: doExecSQLDirect missing variable named hdbc</FONT></B><BR>', _html_crlf)
    Exit
Endif

If IsDefined( sql_stmnt) == @NO
    WebOut('<BR><B><FONT COLOR="RED">ERROR: doExecSQLDirect missing variable named sql_stmnt</FONT></B><BR>', _html_crlf)
    Exit
Endif

If IsDefined( sql_alias%sql_level%) == @NO
    WebOut('<BR><B><FONT COLOR="RED">ERROR: doExecSQLDirect missing variable named sql_alias for sql_level=%sql_level%</FONT></B><BR>', _html_crlf)
    Exit
Endif

If IsDefined( sql_fetch) == @NO
    sql_fetch = @FALSE
Endif

If IsDefined( sql_fetch_map) == @NO
    sql_fetch_map = ""
Endif

If IsDefined( sql_level) == @NO
    sql_level = ""
Endif

;ErrorMode(@OFF)
retcode = qConnect(hdbc%sql_level%, _datasource, "", "")
;ErrorMode(@CANCEL)

If (retcode != @qSuccess) && (retcode != @qSuccessInfo)
  WebOut('<BR><B><FONT COLOR="RED">doExecSQLDirect: qConnect failed %retcode% for sql_level=%sql_level%</FONT></B><BR>', _html_crlf)
  Exit
Endif

;THIS ALLOCATES A SQL STATEMENT HANDLE
;ErrorMode(@OFF)
hstmt%sql_level% = qAllocStmt(hdbc%sql_level%)
;ErrorMode(@CANCEL)

If hstmt%sql_level% == -1
  retcode = qLastCode()
  WebOut('<BR><B><FONT COLOR="RED">doExecSQLDirect: qAllocStmt failed %retcode% for sql_level=%sql_level%</FONT></B><BR>', _html_crlf)
  Exit
Endif

;ErrorMode(@OFF)
retcode = qExecDirect(hstmt%sql_level%, sql_stmnt%sql_level%)
;ErrorMode(@CANCEL)

;WebOut('<BR><B><FONT COLOR="BLUE">', _html_crlf)
;WebOut('qExecDirect %retcode%', _html_crlf)
;WebOut('<BR>sql_stmnt%sql_level%=', _html_crlf)
;WebOut(sql_stmnt%sql_level%, _html_crlf)
;WebOut(', retcode=%retcode%</FONT></B><BR>', _html_crlf)

If (retcode != @qSuccess) && (retcode != @qSuccessInfo)
  WebOut('<BR><B><FONT COLOR="RED">', 0)
  WebOut('qExecDirect failed %retcode%', 0)
  WebOut('<BR>sql_stmnt%sql_level%=', 0)
  WebOut(sql_stmnt%sql_level%, 0)
  WebOut('</FONT></B><BR>', _html_crlf)
  Exit
Endif

sql_fetched = @FALSE

If (sql_fetch == @TRUE) && (StrLen( sql_fetch_map%sql_level%) > 0)
    sql_fetch_ic = ItemCount( sql_fetch_map%sql_level%, ",")

    For sql_fetch_i = 1 to sql_fetch_ic
        _sql_alias_var_name = sql_alias%sql_level%
        _cvalueVar = "%_sql_alias_var_name%%sql_fetch_i%%sql_level%"
        sql_fetch_ch = ItemExtract(sql_fetch_i, sql_fetch_map%sql_level%, ",")
        sql_fetch_ch_i = StrIndex( sql_fetch_ch, "S", 1, @FWDSCAN)
        If sql_fetch_ch_i > 0
            sql_fetch_ch_len = StrLen( sql_fetch_ch)
            __cv = StrSub( sql_fetch_ch, sql_fetch_ch_i + 1, sql_fetch_ch_len - sql_fetch_ch_i)
;WebOut('<BR><B><FONT COLOR="GREEN">_cvalueVar=(%_cvalueVar%), sql_fetch_i=(%sql_fetch_i%), __cv=(%__cv%), sql_fetch_ch_i=(%sql_fetch_ch_i%), sql_fetch_ch=(%sql_fetch_ch%), sql_fetch_ch_len=(%sql_fetch_ch_len%)</FONT></B><BR>', _html_crlf)
            _cvalueBufLen%sql_fetch_i% = Int( __cv) - 1

;            ErrorMode(@OFF)
            retcode = qBindCol(hstmt%sql_level%, sql_fetch_i, "%_cvalueVar%", _cvalueBufLen%sql_fetch_i%)
;            ErrorMode(@CANCEL)

            If (retcode != @qSuccess) && (retcode != @qSuccessInfo)
                WebOut('<B><FONT COLOR="RED">doExecSQLDirect: qBindCol failed %retcode% for %_cvalueVar% for sql_level=%sql_level%</FONT></B>', _html_crlf)
                Exit
            Endif
        Else
;WebOut('<BR><B><FONT COLOR="GREEN">_cvalueVar=(%_cvalueVar%), sql_fetch_i=(%sql_fetch_i%)</FONT></B><BR>', _html_crlf)
;            ErrorMode(@OFF)
            retcode = qBindCol(hstmt%sql_level%, sql_fetch_i, "%_cvalueVar%", 80)
;            ErrorMode(@CANCEL)

            If (retcode != @qSuccess) && (retcode != @qSuccessInfo)
                WebOut('<B><FONT COLOR="RED">doExecSQLDirect: qBindCol failed %retcode% for %_cvalueVar% for sql_level=%sql_level%</FONT></B>', _html_crlf)
                Exit
            Endif
        Endif
    Next

    While @TRUE
;        ErrorMode(@OFF)
        retcode = qFetch(hstmt%sql_level%)
;        ErrorMode(@CANCEL)

        If retcode == @qNoData Then Break

;        WebOut('<BR><B><FONT COLOR="BLUE">qFetch %retcode% for sql_level=%sql_level%</FONT></B><BR>', _html_crlf)

        If (retcode != @qSuccess) && (retcode != @qSuccessInfo)
            WebOut('<BR><B><FONT COLOR="RED">doExecSQLDirect: qFetch failed %retcode% for sql_level=%sql_level%</FONT></B><BR>', _html_crlf)
            Exit
        Endif

        sql_fetched = @TRUE

        _sql_fetch_gosub = sql_fetch_gosub%sql_level%
        If IsDefined( sql_fetch_gosub%sql_level%) == @YES
            Gosub %_sql_fetch_gosub%
            Drop( _sql_fetch_gosub)
        Endif

    EndWhile

Endif


;SQL_CLOSE  - FREES A SQL CONNECTION
;ErrorMode(@OFF)
qFreeStmt(hstmt%sql_level%, 0)
;ErrorMode(@CANCEL)
;SQL_UNBIND
;ErrorMode(@OFF)
qFreeStmt(hstmt%sql_level%, 2)
;ErrorMode(@CANCEL)

If IsDefined( sql_level) == @YES
    If StrLen( sql_level) == 0
        Drop( sql_level)
    Endif
Endif

return

