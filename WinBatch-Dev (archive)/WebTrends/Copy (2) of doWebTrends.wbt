; doWebTrends.wbt

;AddExtender("wwctl32i.dll")

IntControl(29, @TAB, 0, 0, 0)

wName = "WebTrends Log Analyzer"
wName2 = "%wName% v4.1a"

_max_items = 999

_minimum_file_size = (1024 * 1024)

wNameProfile = "Add Web Log Profile"

wNameScheduler = "Scheduler..."

wNameSchedule = "Schedule Report"

status_rep = "status.rep"

dir_path = ""

reports_dir = ""

report_schedule_delay = 30 ; in minutes - we can process at most 2 files per minute

dir0 = 2
dir1 = "N:\access-logs\"
dir2 = "D:\access-logs\"

webtrends_reg_keyname = "SOFTWARE\WebTrends Corporation\Log Analyzer\InstallPath"

regkey = RegOpenKey(@REGMACHINE, webtrends_reg_keyname)
webtrends_basedir = RegQueryValue(regkey, "[]")
RegCloseKey(regkey)

count = 0
webtrends_Datfiles_dir = ""
If DirExist( webtrends_basedir)
	webtrends_Datfiles_dir = StrReplace( StrCat( webtrends_basedir, "\WTM_LOG\DATFILES"), "\\", "\")

	If DirExist( webtrends_Datfiles_dir)
		webtrends_dot_ftp_files = DirItemize( StrReplace( StrCat( webtrends_Datfiles_dir, "\*.ftp"), "\\", "\"))
		count = ItemCOunt( webtrends_dot_ftp_files, @TAB)
;Message( "DEBUG", "webtrends_dot_ftp_files count=(%count%)")
	Endif
Endif

;exit

If WinExist(wName) == @TRUE

	while 1
		num = AskLine ("%wName%:", "Number of items to delete? (0=skip delete, %_max_items% max)", "%count%")
		If (num > -1) && (num < _max_items)
			for j=1 to dir0
				If DirExist(dir%j%)
					types = "All Files|*.*|Access Log Files|*.00?;*access-*.log"
					dirname = AskFileName( "Select the directory (by selecting one of the files) that contains the access logs:", dir%j%, types, "", 1)

					If StrLen( dirname) > 0
						dir_path = FilePath(dirname)
						dir_root = FileRoot(dirname)
						dir_ext = FileExtension(dirname)
						
;						 _text = StrCat( "You entered ", dirname, " with path=<", dir_path, ", root=<", dir_root, ">, ext=<", dir_ext, ">")
						
;						 Message( "dirname", _text)
					Endif
					break
				Endif
			Next
			
			If (num > 0) && (num < _max_items)
				Delay( 2)
				For i=1 to num
					WinActivate(wName)
					SendKey(`^{HOME}`) ; select the top item to delete
;					 Delay( 1)
					SendKey(`!Fd`)	   ; Delete an item from the list
;					 Delay( 1)
					SendKey(`y`)	   ; Delete an item from the list
					Delay( 1)
					remains = num - i
					WinTitle(wName, "%wName2% - Deleted #%i% with %remains% remaining")
				Next

				Goto skip_deletion_of_schedules
				
				WinActivate(wName)
				SendKey(`!Fs`)

				For i=1 to num
					WinActivate(wNameScheduler)
					SendKey(`^{HOME}`) ; select the top item to delete
;					 Delay( 1)
					SendKey(`!D`)	   ; Delete an item from the list
;					 Delay( 1)
					SendKey(`y`)	   ; Delete an item from the list
					remains = num - i
					WinTitle(wName, "%wName2% - Deleted #%i% with %remains% remaining")
				Next
				
:skip_deletion_of_schedules

				WinTitle(wName, "%wName2% - Deleted ALL #%i%")
			Endif

; Now we process all the files and build the list in WebTrends

			If DirExist( dir_path)
				reports_dir = "%dir_path%\reports"

				If DirExist( reports_dir) == @FALSE
					DirMake(reports_dir)
				Endif
				
				_dir_path = StrCat( dir_path, "\*.*")
				files = FileItemize(_dir_path)
				_number_of_files = ItemCount(files, @TAB)
				report_schedule_delay = (_number_of_files / 2) + (_number_of_files mod 2)
				for _i=1 to _number_of_files
					aFileName = ItemExtract(_i, files, @TAB)
					_aFileName = StrReplace( StrCat( dir_path, "\", aFileName), "\\", "\")
					_aFileNameSize = FileSize( _aFileName)
					If _aFileNameSize > _minimum_file_size
						If WinExist(wName) == @TRUE
							WinActivate(wName)
							WinTitle(wName, "%wName2% - %aFileName%")
							Delay( 1)
							Gosub buildAProfile
							Delay( 1)
							Gosub scheduleAProfile
						Endif
					Else
						If WinExist(wName) == @TRUE
							WinActivate(wName)
							WinTitle(wName, "%wName2% - Deleted %aFileName% - size is %_aFileNameSize%")
							FileDelete( _aFileName)
						Endif
					Endif
;					 exit
;Debug( @ON)
;					 Message( "DEBUG", "aFileName=<%aFileName%>")
				Next
			Endif
			
			break
		Else
			Message( "WARNING: Number of items to delete is invalid", "You entered %num% - Try again?")
		Endif
	endwhile

Else
;	 Message( "WARNING: %wName2% is NOT running", "Start it up and try again!")

	for j=1 to dir0
		If DirExist(dir%j%)
			types = "All Files|*.*|Access Log Files|*.00?;*access-*.log"
			dirname = AskFileName( "Select the directory to clean-up/check (by selecting one of the files) that contains the access logs:", dir%j%, types, "", 1)

			If StrLen( dirname) > 0
				dir_path = FilePath(dirname)
				dir_root = FileRoot(dirname)
				dir_ext = FileExtension(dirname)
			Endif
			break
		Endif
	Next

	If DirExist( dir_path) == @TRUE
		_file_path = StrCat( dir_path, "\*.*")
		files = FileItemize( _file_path)
		files_copy = files

		reports_dir = "%dir_path%\reports"

		If DirExist( reports_dir) == @TRUE
			_dir_path = StrCat( reports_dir, "\*.*")
			dirs = DirItemize( _dir_path)
			_number_of_dirs = ItemCount(dirs, @TAB)
			For _i=1 to _number_of_dirs
				aDirName = ItemExtract(_i, dirs, @TAB)
				_aDirName = StrReplace( StrCat( reports_dir, "\", aDirName), "\\", "\")
				_aFileName = StrReplace( StrCat( _aDirName, "\", status_rep), "\\", "\")

				__handle = fileopen(_aFileName, "READ")
				If __handle <> 0
					_desc = FileRead(__handle)
					FileClose(__handle)
					
					_desc = StrTrim( _desc)
					ii = StrIndexNc(files, _desc, 1, @FWDSCAN)
					If ii > 0
						_ii = StrIndexNc(files, @TAB, ii, @BACKSCAN)
						_ii = _ii + 1

						_ij = StrIndexNc(files, @TAB, _ii, @FWDSCAN)
						If _ij < 1
							_ij = StrLen( files)
						Endif
						If _ij > 0
							__s = StrSub(files, _ii, _ij - _ii)
							_ix = ItemLocate( __s, files, @TAB)
							If _ix > 0
								files = ItemRemove( _ix, files, @TAB)
							Else
								Message( "DEBUG", "==> (%__s%) at %_ix% for _desc=<%_desc%> in %_aDirName%")
							Endif
						Endif

;							 Message( "DEBUG", "Missing log file for _desc=<%_desc%> at _ii=%_ii% & ii=%ii% in %_aDirName%")
					Else
;						 Message( "DEBUG", "Missing log file for _desc=<%_desc%> in %_aDirName%")

						__aFileName = StrReplace( StrCat( _aDirName, "\*.*"), "\\", "\")
						__files = FileItemize( __aFileName)
						__number_of__files = ItemCount(__files, @TAB)
ErrorMode(@OFF)
						_result = FileDelete( __aFileName)
ErrorMode(@CANCEL)
						If _result == @FALSE
							Message( "DEBUG", "(1) What the hell is __aFileName=%__aFileName% with _result=%_result% and __number_of__files=%__number_of__files% using __files=%__files%")
							exit
						Endif

ErrorMode(@OFF)
						_result = DirRemove( _aDirName)
ErrorMode(@CANCEL)
						If _result == @FALSE
							Message( "DEBUG", "(2) What the hell is _aDirName=<%_aDirName%> with _result=%_result%")
							exit
						Endif
;						 exit
					Endif
				Endif
			Next
			__numfiles = ItemCount(files, @TAB)
			__msg = StrCat( "Delete ALL but these files=(", files, ") (%__numfiles%) have NO ", status_rep, " file - might need to rerun the report(s)?!?")
			q = AskYesNo('CLEAN-UP SCAN RESULTS', __msg)
			If q == @YES
				_num_files = ItemCount( files, @TAB)
				For _xi=1 to _num_files
					anXName = ItemExtract(_xi, files, @TAB)
					_ix = ItemLocate( anXName, files_copy, @TAB)
					If _ix > 0
						files_copy = ItemRemove( _ix, files_copy, @TAB)
					Endif
				Next
				o_dir = DirGet()
				DirChange( dir_path)
				FileDelete( files_copy)
				DirChange( o_dir)
			Endif
		Else
			Message( "ERROR", "%reports_dir% doesn't exist")
		Endif
				
	Endif
Endif

exit


:scheduleAProfile
; dir_path ............ input - the dir_path for all the files being processed
; aFileName ........... input - the file being processed
; reports_dir ......... input - the place the reports live in when completed
; __i ................. used
; __attempts .......... used
; __digit ............. used
; __filenum............ used
; __filenums........... used
; __s ................. used
; __time .............. used
; __YmdHms ............ used
; __delayHms .........	used
; __laterYmdHms ....... used
; __report_path ....... used
; __report_pathname ... used
; __status_rep ........ used
; __handle ............ used

	If WinExist(wName) == @TRUE
		WinActivate(wName)
		SendKey('!Fs')
		Delay( 1)

		If WinExist(wNameScheduler) == @TRUE
			WinActivate(wNameScheduler)

			SendKey('!A')
			Delay( 1)

			If WinExist(wNameSchedule) == @TRUE
				WinActivate(wNameSchedule)

				SendKey('E') ; Executive Summary
				SendKey('{TAB}{TAB}')
				Delay( 1)

				SendKey(_desc)
				Delay( 1)

				SendKey('{TAB}')
				Delay( 1)
				
				__YmdHms = TimeYmdHms( )

				__delayHms = "00:00:00:00:%report_schedule_delay%:00"  ; in mins
				__laterYmdHms = TimeAdd(__YmdHms, __delayHms)
				
				__time = StrSub(__laterYmdHms, 10, -1)
				SendKey(__time)
				Delay( 1)

				SendKey('{TAB}{TAB}1{TAB}W{TAB}{TAB}')
				Delay( 1)
				
				__attempts = 0
				__filenums = ""
				while 1
					__filenum = ""
					For __i=1 to 8
						__digit = Random( 9)
						__filenum = StrCat( __filenum, "%__digit%")
					Next
				
					__filenums = StrCat( __filenums, __filenum, "|")
					
					__report_path = StrCat( reports_dir, "\", __filenum)
					__report_pathname = StrReplace( __report_path, "\\", "\")

					If DirExist( __report_path)
						__attempts = __attempts + 1
						If __attempts > 10
							Message( "WARNING", "Got stuck! Hit Okay and we'll exit rather than continue forever... __filenums=<%__filenums%>")
							exit
						Endif
					Else
						DirMake(__report_path)
						break
					Endif
				endwhile
				
				__report_path = StrReplace( StrCat( __report_pathname, "\rep.htm"), "\\", "\")

				SendKey(__report_path)
				Delay( 1)
				SendKey('!S')
				Delay( 1)
				
				__status_rep = StrCat( __report_pathname, "\", status_rep)
				__handle = fileopen(__status_rep, "WRITE")
				If __handle <> 0
					FileWrite(__handle, StrCat( _desc, @CR))
					FileClose(__handle)
				Endif

				SendKey('!O')
				Delay( 1)

			Endif
		Endif

	Endif

return


:buildAProfile
; dir_path .... input - the dir_path for all the files being processed
; aFileName ... input - the file being processed
; __i ......... used
; __i2 ........ used
; __i3 ........ used
; _desc ....... used
; __i4 ........ used
; __i5 ........ used
; _fname ...... used
; _fpath ...... used
; __i6 ........ used
; __i7 ........ used
; _access ..... "_access"
; __i8 ........ used

	_access = "_access"
	
	If WinExist(wName) == @TRUE
		WinActivate(wName)
		SendKey(`!Fn`)
		Delay( 2)

		__i = StrIndexNc(aFileName, "__", 1, @FWDSCAN)
		If __i > 0
			__i2 = StrIndexNc(aFileName, "_", __i + 1, @FWDSCAN)
			If __i2 > 0
				__i3 = StrIndexNc(aFileName, "__", __i2 + 1, @FWDSCAN)
				If __i3 < 1
					__i3 = StrIndexNc(aFileName, "_htdocs_", __i2 + 1, @FWDSCAN)
				Endif
				If __i3 > 0
					_desc = StrSub(aFileName, __i2 + 1, (__i3 - 1) - __i2)

					If WinExist(wNameProfile) == @TRUE
						WinActivate(wNameProfile)
						SendKey(`{HOME}+{END}{DELETE}`)
						SendKey(_desc)
						Delay( 1)

						If WinExist(wNameProfile) == @TRUE
							WinActivate(wNameProfile)
							SendKey(`{TAB}{TAB}`)
							SendKey(`{HOME}+{END}{DELETE}`)
							Delay( 1)
					
							; _access-19980507-1.log or _access.00?
							_fname = aFileName
					
							__i6 = StrIndexNc(_fname, _access, 1, @FWDSCAN)
							If __i6 < 1
								__i6 = 1
							Else
								__i6 = __i6 + StrLen( _access)
							Endif
					
							__i7 = StrIndexNc(_fname, ".", __i6 + 1, @FWDSCAN)
							If __i7 < 1
								__i7 = StrLen( _fname)
							Endif

							__i8 = StrSub(_fname, __i6 + 1, (__i7 - 1) - __i6)
					
							_fname = StrReplace( _fname, __i8, "*")
					
							If WinExist(wNameProfile) == @TRUE
								WinActivate(wNameProfile)
								
								_fpath = StrReplace( StrCat( dir_path, "\", _fname), "\\", "\")
								
								SendKey(`%_fpath%!NA!N`)
								Delay( 1)
					
								__i4 = StrIndexNc(_desc, "_", 1, @FWDSCAN)
								If __i4 < 1
									__i4 = 0
								Endif

								__i5 = StrIndexNc(_desc, "-", __i4 + 1, @FWDSCAN)
								If __i5 < 1
									__i5 = StrLen( _desc)
								Endif

								_url = StrSub(_desc, __i4 + 1, (__i5 - 1) - __i4)

								If WinExist(wNameProfile) == @TRUE
									WinActivate(wNameProfile)
									SendKey(`{TAB}`)
									Delay( 1)
									SendKey(`{HOME}+{END}{DELETE}`)
									SendKey(`%_url%/`)
									Delay( 1)
									SendKey(`!N`)
									SendKey(`!N`)
									SendKey(`{ENTER}`)
									Delay( 1)
								Endif
							Endif
						Endif
					Endif
				Else
					Message( "DEBUG", "(3) What the hell is this... aFileName=<%aFileName%>")
					exit
				Endif
			Else
				Message( "DEBUG", "(2) What the hell is this... aFileName=<%aFileName%>")
				exit
			Endif
		Else
			Message( "DEBUG", "(1) What the hell is this... aFileName=<%aFileName%>")
			exit
		Endif
	Endif

return


